"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var useModal_1 = __importDefault(require("../useModal"));
var ModalToggler = function (props) {
    var id = props.id, className = props.className, slug = props.slug, _a = props.style, style = _a === void 0 ? {} : _a, _b = props.htmlElement, htmlElement = _b === void 0 ? 'button' : _b, _c = props.htmlAttributes, htmlAttributes = _c === void 0 ? {} : _c, children = props.children;
    var _d = (0, useModal_1.default)(), currentModal = _d.currentModal, toggle = _d.toggle, classPrefix = _d.classPrefix;
    var baseClass = "".concat(classPrefix, "__modal-toggler");
    var isOpen = currentModal === slug;
    var mergedClasses = [
        baseClass,
        "".concat(baseClass, "--slug-").concat(slug),
        isOpen && "".concat(baseClass, "--slug-").concat(slug, "--is-open"),
        className,
    ].filter(Boolean).join(' ');
    var mergedAttributes = __assign(__assign({ role: 'button', 'aria-expanded': isOpen ? 'true' : 'false', 'aria-controls': slug }, htmlAttributes), { onClick: function () {
            toggle(slug);
            if (typeof htmlAttributes.onClick === 'function')
                htmlAttributes.onClick();
        } });
    var Tag = htmlElement;
    return (react_1.default.createElement(Tag, __assign({}, __assign({ id: id, className: mergedClasses, style: style }, mergedAttributes)), children && children));
};
exports.default = ModalToggler;
//# sourceMappingURL=index.js.map